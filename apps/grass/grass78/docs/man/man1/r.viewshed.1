.TH r.viewshed 1 "" "GRASS 7.8.5" "GRASS GIS User's Manual"
.SH NAME
\fI\fBr.viewshed\fR\fR  \- Computes the viewshed of a point on an elevation raster map.
.br
Default format: NULL (invisible), vertical angle wrt viewpoint (visible).
.SH KEYWORDS
raster, viewshed, line of sight, LOS
.SH SYNOPSIS
\fBr.viewshed\fR
.br
\fBr.viewshed \-\-help\fR
.br
\fBr.viewshed\fR [\-\fBcrbe\fR] \fBinput\fR=\fIname\fR \fBoutput\fR=\fIname\fR \fBcoordinates\fR=\fIeast,north\fR  [\fBobserver_elevation\fR=\fIvalue\fR]   [\fBtarget_elevation\fR=\fIvalue\fR]   [\fBmax_distance\fR=\fIvalue\fR]   [\fBrefraction_coeff\fR=\fIfloat\fR]   [\fBmemory\fR=\fIvalue\fR]   [\fBdirectory\fR=\fIstring\fR]   [\-\-\fBoverwrite\fR]  [\-\-\fBhelp\fR]  [\-\-\fBverbose\fR]  [\-\-\fBquiet\fR]  [\-\-\fBui\fR]
.SS Flags:
.IP "\fB\-c\fR" 4m
.br
Consider the curvature of the earth (current ellipsoid)
.IP "\fB\-r\fR" 4m
.br
Consider the effect of atmospheric refraction
.IP "\fB\-b\fR" 4m
.br
Output format is invisible = 0, visible = 1
.IP "\fB\-e\fR" 4m
.br
Output format is invisible = NULL, else current elev \- viewpoint_elev
.IP "\fB\-\-overwrite\fR" 4m
.br
Allow output files to overwrite existing files
.IP "\fB\-\-help\fR" 4m
.br
Print usage summary
.IP "\fB\-\-verbose\fR" 4m
.br
Verbose module output
.IP "\fB\-\-quiet\fR" 4m
.br
Quiet module output
.IP "\fB\-\-ui\fR" 4m
.br
Force launching GUI dialog
.SS Parameters:
.IP "\fBinput\fR=\fIname\fR \fB[required]\fR" 4m
.br
Name of input elevation raster map
.IP "\fBoutput\fR=\fIname\fR \fB[required]\fR" 4m
.br
Name for output raster map
.IP "\fBcoordinates\fR=\fIeast,north\fR \fB[required]\fR" 4m
.br
Coordinates of viewing position
.IP "\fBobserver_elevation\fR=\fIvalue\fR" 4m
.br
Viewing elevation above the ground
.br
Default: \fI1.75\fR
.IP "\fBtarget_elevation\fR=\fIvalue\fR" 4m
.br
Offset for target elevation above the ground
.br
Default: \fI0.0\fR
.IP "\fBmax_distance\fR=\fIvalue\fR" 4m
.br
Maximum visibility radius. By default infinity (\-1)
.br
Default: \fI\-1\fR
.IP "\fBrefraction_coeff\fR=\fIfloat\fR" 4m
.br
Refraction coefficient
.br
Options: \fI0.0\-1.0\fR
.br
Default: \fI0.14286\fR
.IP "\fBmemory\fR=\fIvalue\fR" 4m
.br
Amount of memory to use in MB
.br
Default: \fI500\fR
.IP "\fBdirectory\fR=\fIstring\fR" 4m
.br
Directory to hold temporary files (they can be large)
.SH DESCRIPTION
.PP
\fIr.viewshed\fR is a module that computes the viewshed of a
point on a raster terrain. That is, given an elevation raster, and the
location of an observer, it generates a raster output map showing
which cells are visible from the given location.
The algorithm underlying \fIr.viewshed\fR minimizes both the CPU
operations and the transfer of data between main memory and disk; as a
result \fIr.viewshed\fR runs fast on very large rasters.
.SH NOTES
To run \fIr.viewshed\fR, the user must specify an input elevation
map name, an output raster map name, and the location of the
viewpoint.
.PP
For the time being the viewpoint (\fBcoordinates\fR parameter) is
assumed to be located inside the terrain.  The viewpoint location is
given in map coordinates.
.PP
The output raster map may have one of three possible formats, based
on which flags are set.
.PP
By default, if no flag is set, the output is in angle\-mode, and
each point in the output map is marked as NULL if the point is not
visible or the respective point in the elevation map is NULL.
Otherwise, a value in [0, 180] representing the vertical angle with
regard to the viewpoint, in degrees, if the point is visible.
A value of 0 is directly below the specified viewing position,
90 is due horizontal. The angle to the cell containing the viewing
position is undefined and set to 180.
.PP
If the \fB\-b\fR flag is set, the output is in boolean\-mode, and each point
in the output map is marked as:
.RS 4n
.IP \(bu 4n
0 if the point is no\-data/null or not visible
.IP \(bu 4n
1 if the point is visible.
.RE
.PP
If the \fB\-e\fR flag is set, the output is in elevation\-mode, and each point
in the output map is marked as:
.RS 4n
.IP \(bu 4n
no\-data (null), if the respective point in the elevation map is no\-data (null)
.IP \(bu 4n
\-1, if the point is not visible
.IP \(bu 4n
the difference in elevation between the point and the viewpoint, if the point is visible.
.RE
.PP
If you wish to identify the area of the map which is within the search
radius but not visible, a combination of \fIr.buffer\fR and
\fIr.mapcalc\fR can be used to create
a negative of the viewshed map.
.PP
By default the elevations are not adjusted for the curvature of the
earth. The user can turn this on with flag
\fB\-c\fR.
.PP
By default the observer is assumed to have height 1.75 map units above
the terrain.  The user can change this using option
\fBobserver_elevation\fR. The value entered is in the same units as the
elevation.
.PP
By default the target is assumed to have height of 0 map units above the
terrain.  The user can change this using option
\fBtarget_elevation\fR to determine if objects of a given height would be
visible. The value entered is in the same units as the elevation.
.PP
By default there is no restriction on the maximum distance to which
the observer can see.  The user can set a maximum distance of
visibility using option \fBmax_distance\fR.  The value entered is in the
same units as the cell size of the raster.
.PP
Main memory usage: By default \fIr.viewshed\fR assumes it has
500MB of main memory, and sets up its internal data structures so that
it does not require more than this amount of RAM.  The user can set
the amount of memory used by the program by setting the
\fBmemory\fR to the number of MB of memory they would like to
be used.
.SS Memory mode
The algorithm can run in two modes: in internal memory, which
means that it keeps all necessary data structures in memory during the
computation. And in external memory, which means that the data
structures are external, i.e. on disk.  \fIr.viewshed\fR decides
which mode to run in using the amount of main memory specified by the
user.  The internal mode is (much) faster than the external mode.
.PP
Ideally, the user should specify on the command line the amount of
physical memory that is free for the program to use. Underestimating
the memory may result in \fIr.viewshed\fR running in external mode
instead of internal, which is slower. Overestimating the amount of
free memory may result in \fIr.viewshed\fR running in internal mode
and using virtual memory, which is slower than the external mode.
.SS The algorithm
\fIr.viewshed\fR uses the following model for determining
visibility: The height of a cell is assumed to be variable, and the
actual height of a point falling into a cell, but not identical the cell
center, is interpolated. Thus the terrain is viewed as a smooth surface.
Two points are visible to each other if their line\-of\-sight does not
intersect the terrain. The height for an arbitrary point x in the terrain
is interpolated from the 4 surrounding neighbours. This means that this
model does a bilinear interpolation of heights.
This model is suitable for both low and high resolution rasters as well
as terrain with flat and steep slopes.
.PP
The core of the algorithm is determining, for each cell, the
line\-of\-sight and its intersections with the cells in the terrain. For
a (square) grid of \fIn\fR cells, there can be \fIO(n
\u1/2\d)\fR cells that intersect the LOS. If we test every
single such cell for every point in the grid, this adds up to
\fIO(n\u3/2\d)\fR tests. We can do all these tests faster if
we re\-use information from one point to the next (two grid points that
are close to each other will be intersected by a lot of the same
points) and organize the computation differently.
.PP
More precisely, the algorithm uses a technique called \fIline
sweeping\fR: It considers a half\-line centered at the viewpoint, and
rotates it radially around the viewpoint, 360 degrees.  During the
sweep it keeps track of all the cells that intersect the sweep line at
that time; These are called the \fIactive\fR cells. A cell has 3
associated events: when it is first met by the sweep line and inserted
into the active structure; when it is last met by the sweep line and
deleted from the active structure; and when the sweep line passes over
its centerpoint, at which time its visibility is determined.  To
determine the visibility of a cell all cells that intersect the
line\-of\-sight must be active, so they are in the active structure.
The algorithm looks at all the active cells that are between the point
and the viewpoint, and finds the maximum gradient among these.  If the
cell\(cqs gradient is higher, it is marked as visible, whereas if it is
lower, it is marked as invisible.
.PP
For a (square) raster of \fIn\fR point in total, the standard
viewshed algorithm uses \fIO(n sqrt(n))= O(n\u3/2\d)\fR
time, while the sweep\-line algorithm uses \fIO(n lg n)\fR time.
This algorithm is efficient in terms of CPU operations and can be also
made efficient in terms of I/O\-operations.  For all details see the
REFERENCES below.
.PP
.TS
expand;
lw60 lw1 lw60.
T{
T}	 	T{
T}
.sp 1
T{
The sweep\-line.
T}	 	T{
The active cells.
T}
.sp 1
.TE
.SH EXAMPLES
Using the North Carolina dataset:  Compute viewshed from a observation
point (coordinates: 638728.087167, 220609.261501) which is 5 meters
above ground:
.br
.nf
\fC
g.region raster=elev_lid792_1m \-p
r.viewshed input=elev_lid792_1m output=elev_lid792_1m_viewshed coordinates=638728,220609 observer_elevation=5.0
\fR
.fi
.br
\fIViewshed shown on shaded terrain (observer position in the north\-east quadrant with white dot; 5m above ground)\fR
Using the Spearfish dataset:  calculating the viewpoint from top
of a mountain:
.br
.nf
\fC
g.region raster=elevation.10m
r.viewshed input=elevation.10m output=viewshed coordinates=598869,4916642 memory=800
\fR
.fi
.SH REFERENCES
.RS 4n
.IP \(bu 4n
Computing Visibility on Terrains in External Memory. Herman
Haverkort, Laura Toma and Yi Zhuang. In \fIACM Journal on Experimental
Algorithmics (JEA)\fR 13 (2009).
.IP \(bu 4n
Computing
Visibility on Terrains in External Memory. Herman Haverkort, Laura
Toma and Yi Zhuang. In the \fIProceedings of the 9th Workshop on
Algorithm Engineering and Experiments / Workshop on Analytic Algorithms
and Combinatorics (ALENEX/ANALCO 2007)\fR.
.RE
.SH SEE ALSO
\fI
r.mapcalc
\fR
.SH AUTHORS
.PP
Laura Toma (Bowdoin College): ltoma@bowdoin.edu
.PP
Yi Zhuang (Carnegie\-Mellon University): yzhuang@andrew.cmu.edu
.PP
William Richard (Bowdoin College): willster3021@gmail.com
.PP
Markus Metz
.SH SOURCE CODE
.PP
Available at: r.viewshed source code (history)
.PP
Main index |
Raster index |
Topics index |
Keywords index |
Graphical index |
Full index
.PP
© 2003\-2020
GRASS Development Team,
GRASS GIS 7.8.5 Reference Manual
