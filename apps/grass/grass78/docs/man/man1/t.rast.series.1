.TH t.rast.series 1 "" "GRASS 7.8.5" "GRASS GIS User's Manual"
.SH NAME
\fI\fBt.rast.series.py\fR\fR  \- Performs different aggregation algorithms from r.series on all or a subset of raster maps in a space time raster dataset.
.SH KEYWORDS
temporal, aggregation, series, raster, time
.SH SYNOPSIS
\fBt.rast.series.py\fR
.br
\fBt.rast.series.py \-\-help\fR
.br
\fBt.rast.series.py\fR [\-\fBtn\fR] \fBinput\fR=\fIname\fR \fBmethod\fR=\fIstring\fR[,\fIstring\fR,...]  [\fBquantile\fR=\fIfloat\fR[,\fIfloat\fR,...]]   [\fBorder\fR=\fIstring\fR[,\fIstring\fR,...]]   [\fBwhere\fR=\fIsql_query\fR]  \fBoutput\fR=\fIname\fR[,\fIname\fR,...]  [\-\-\fBoverwrite\fR]  [\-\-\fBhelp\fR]  [\-\-\fBverbose\fR]  [\-\-\fBquiet\fR]  [\-\-\fBui\fR]
.SS Flags:
.IP "\fB\-t\fR" 4m
.br
Do not assign the space time raster dataset start and end time to the output map
.IP "\fB\-n\fR" 4m
.br
Propagate NULLs
.IP "\fB\-\-overwrite\fR" 4m
.br
Allow output files to overwrite existing files
.IP "\fB\-\-help\fR" 4m
.br
Print usage summary
.IP "\fB\-\-verbose\fR" 4m
.br
Verbose module output
.IP "\fB\-\-quiet\fR" 4m
.br
Quiet module output
.IP "\fB\-\-ui\fR" 4m
.br
Force launching GUI dialog
.SS Parameters:
.IP "\fBinput\fR=\fIname\fR \fB[required]\fR" 4m
.br
Name of the input space time raster dataset
.IP "\fBmethod\fR=\fIstring[,\fIstring\fR,...]\fR \fB[required]\fR" 4m
.br
Aggregate operation to be performed on the raster maps
.br
Options: \fIaverage, count, median, mode, minimum, min_raster, maximum, max_raster, stddev, range, sum, variance, diversity, slope, offset, detcoeff, quart1, quart3, perc90, quantile, skewness, kurtosis\fR
.br
Default: \fIaverage\fR
.IP "\fBquantile\fR=\fIfloat[,\fIfloat\fR,...]\fR" 4m
.br
Quantile to calculate for method=quantile
.br
Options: \fI0.0\-1.0\fR
.IP "\fBorder\fR=\fIstring[,\fIstring\fR,...]\fR" 4m
.br
Sort the maps by category
.br
Options: \fIid,  name,  creator,  mapset,  creation_time,  modification_time,  start_time,  end_time,  north,  south,  west,  east,  min,  max\fR
.br
Default: \fIstart_time\fR
.IP "\fBwhere\fR=\fIsql_query\fR" 4m
.br
WHERE conditions of SQL statement without \(cqwhere\(cq keyword used in the temporal GIS framework
.br
Example: start_time > \(cq2001\-01\-01 12:30:00\(cq
.IP "\fBoutput\fR=\fIname[,\fIname\fR,...]\fR \fB[required]\fR" 4m
.br
Name for output raster map(s)
.SH DESCRIPTION
The input of this module is a single space time raster dataset, the
output is a single raster map layer. A subset of the input space time
raster dataset can be selected using the \fBwhere\fR option. The
sorting of the raster map layer can be set using the \fBorder\fR
option. Be aware that the order of the maps can significantly influence
the result of the aggregation (e.g.: slope). By default the maps are
ordered by \fBstart_time\fR.
.PP
\fIt.rast.series\fR is a simple wrapper for the raster module
\fBr.series\fR. It supports a subset of the aggregation methods of
\fBr.series\fR.
.SH EXAMPLES
.SS Estimate the average temperature for the whole time series
Here the entire stack of input maps is considered:
.br
.nf
\fC
t.rast.series input=tempmean_monthly output=tempmean_average method=average
\fR
.fi
.SS Estimate the average temperature for a subset of the time series
Here the stack of input maps is limited to a certain period of time:
.br
.nf
\fC
t.rast.series input=tempmean_daily output=tempmean_season method=average \(rs
  where=\(dqstart_time >= \(cq2012\-06\(cq and start_time <= \(cq2012\-08\(cq\(dq
\fR
.fi
.SS Climatology: single month in a multi\-annual time series
By considering only a single month in a multi\-annual time series the so\-called
climatology can be computed.
Estimate average temperature for all January maps in the time series:
.br
.nf
\fC
t.rast.series input=tempmean_monthly \(rs
    method=average output=tempmean_january \(rs
    where=\(dqstrftime(\(cq%m\(cq, start_time)=\(cq01\(cq\(dq
# equivalently, we can use
t.rast.series input=tempmean_monthly \(rs
    output=tempmean_january method=average \(rs
    where=\(dqstart_time = datetime(start_time, \(cqstart of year\(cq, \(cq0 month\(cq)\(dq
# if we want also February and March averages
t.rast.series input=tempmean_monthly \(rs
    output=tempmean_february method=average \(rs
    where=\(dqstart_time = datetime(start_time, \(cqstart of year\(cq, \(cq1 month\(cq)\(dq
t.rast.series input=tempmean_monthly \(rs
    output=tempmean_march method=average \(rs
    where=\(dqstart_time = datetime(start_time, \(cqstart of year\(cq, \(cq2 month\(cq)\(dq
\fR
.fi
Generalizing a bit, we can estimate monthly climatologies for all months
by means of different methods
.br
.nf
\fC
for i in \(gaseq \-w 1 12\(ga ; do
  for m in average stddev minimum maximum ; do
    t.rast.series input=tempmean_monthly method=${m} output=tempmean_${m}_${i} \(rs
    where=\(dqstrftime(\(cq%m\(cq, start_time)=\(cq${i}\(cq\(dq
  done
done
\fR
.fi
.SH SEE ALSO
\fI
r.series,
t.create,
t.info
\fR
.PP
Temporal data processing Wiki
.SH AUTHOR
Sören Gebbert, Thünen Institute of Climate\-Smart Agriculture
.SH SOURCE CODE
.PP
Available at: t.rast.series source code (history)
.PP
Main index |
Temporal index |
Topics index |
Keywords index |
Graphical index |
Full index
.PP
© 2003\-2020
GRASS Development Team,
GRASS GIS 7.8.5 Reference Manual
